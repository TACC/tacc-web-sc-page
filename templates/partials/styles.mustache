<style type="text/css">
/* HACK */
/* WARN: There are two `#main-content`'s! (bug origin: clone `/sc18`) */
/* Resolves whitespace in a simpler manner than `/sc18` failed to do */
#main-content {
    padding-bottom: 0;
}
/* Avoids adding more superfluous `.row` and `.col-…` divs */
#sc19-booth-events {
    margin-bottom: 30px; /* replicate `.col-… { margin-*: 15px; }` pair */
}

/* COMPONENTS */
/* COMPONENTS: SC19 Content */
.sc19-content,
[class*="sc19-content--"] {
    background-color: #FFF;
    margin: 0px;
    padding: 20px;
}
.sc19-content__title {
    margin: 0px;
    padding: 0px;
}
.sc19-content__sub-title {
    margin: 20px 0px 0px 0px;
    padding: 0px;
}
/* FAQ: We should decorate the `…__title`, but only brittle CSS can do that;
        so, we continue to use an `<hr />` (common on TACC, circa 2019) */
.sc19-content__sub-title-decoration {
    margin: 3px 0px 15px 0px;
    padding: 0px;
}
.sc19-content--primary .sc19-content__title     { font-size: 2.5em; }
.sc19-content--primary .sc19-content__sub-title { font-size: 1.75em; }
.sc19-content--secondary .sc19-content__title     { font-size: 2em; }
.sc19-content--secondary .sc19-content__sub-title { font-size: 1.5em; }

/* COMPONENTS: SC19 Event */
.sc19-event + .sc19-event {
    margin-top: 20px;
}
/* SEE: https://stackoverflow.com/a/21261303 */
/* NOTE: Flexbox considered, but this is less code */
/* WARN: ITCSS: This should be "TRUMPS: Scope" code (`.s-`),
                but do not implement Namepsaces until team is on board. */
.sc19-event__data,
.sc19-event__desc {
    margin-bottom: 10px; /* redundant for `p.sc19-event__desc` */
}
.sc19-event__data dt {
    display: inline-block;
    font-weight: normal; /* override `tacc-new-theme/css/main.css` */
}
.sc19-event__data dt:after {
    display: inline-block;
    content: ':';
    margin-right: 1ch;
}
.sc19-event__data dd {
    display: inline;
}
.sc19-event__data dd:after {
    display: block;
    content: '';
}
.sc19-event__data dd ul {
    margin: 0;
}
.sc19-event__data dd ul,
.sc19-event__data dd li {
    display: inline;
}
.sc19-event__data dd li::after {
    display: inline;
    content: ", ";
}
.sc19-event__data dd li:last-of-type::after { display: none; }
.sc19-event__data p {
    display: inline;
}

/* COMPONENTS: SC19 Media */
.sc19-media + .sc19-media {
    margin-top: 30px;
}
.sc19-media .sc19-media__title {
    margin-bottom: 15px;
}

/* COMPONENTS: SC19 "Read More" */
/* .sc19-read-more {} *//* Noop, but adheres to BEM naming practice */
.sc19-read-more__state { display: none; }
/* RFE: Should we use <a> and `:target` (universal question)?
        - Pro: [Accessibility] user focus can move to text
        - Meh: [Architecture] no need to copy link color nor add link class
        - Con: [User Experience] scroll may be distracting
*/
/* SEE: https://justmarkup.com/articles/2017-01-12-truncating-and-revealing-text-the-show-more-and-read-more-patterns/#using-%3Atarget */
.sc19-read-more__on-text,
.sc19-read-more__off-text { display: none; }
.sc19-read-more__state:not(:checked) ~ .sc19-read-more__toggle .sc19-read-more__on-text,
.sc19-read-more__state:checked ~ .sc19-read-more__toggle .sc19-read-more__off-text { display: block; }
.sc19-read-more__toggle {
    font-size: 0.85em;

    cursor: pointer;
    color: #4f71db; /* from `a … { color: #4f71db }` */
}
/* COMPONENTS: SC19 "Read More": Show/Hide Solution #1:
    - Pro: [Performance] CSS-only (no JavaScript)
    - Con: [UI / Design] Only supports one line
*/
.sc19-read-more--solution-1 .sc19-read-more__target {
	/* height: calc( 1.6em * 2 ); *//* from `body { line-height: 1.6em; }` */

	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}
.sc19-read-more--solution-1 .sc19-read-more__state:checked ~ .sc19-read-more__target {
    overflow: visible; /* In case revealed content has floating content */
	white-space: normal;
}
/* COMPONENTS: SC19 "Read More": Show/Hide Solution #2:
    - Pro: [Performance] CSS-only (no JavaScript)
    - Con: [Localization] Ellipses is hard-coded
*/
.sc19-read-more--solution-2 .sc19-read-more__target {
	max-height: calc( 1.6em * 3 ); /* from `body { line-height: 1.6em; }` */
	overflow: hidden;
    position: relative; /* for absolutely-positioned children */
}
.sc19-read-more--solution-2 .sc19-read-more__state:checked ~ .sc19-read-more__target {
    max-height: inherit;
    overflow: visible; /* In case revealed content has floating content */
}
.sc19-read-more--solution-2 .sc19-read-more__target::after {
    display: block;
    content: "";
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 1.6em; /* from `body { line-height: 1.6em; }` */
    background-image: linear-gradient( 0deg, white 12.5%, transparent );
}
.sc19-read-more--solution-2 .sc19-read-more__state:checked ~ .sc19-read-more__target::after {
    display: none;
}
.sc19-read-more--solution-2 .sc19-read-more__target::before {
    position: absolute;
    display: block;
    z-index: 1;
    content: "…";
    bottom: 0;
    right: 0;
	width: calc( 1.6em * 2 ); /* from `body { line-height: 1.6em; }` */
    height: 1.6em; /* from `body { line-height: 1.6em; }` */
    text-align: right;
    background-image: linear-gradient( 270deg, white 50%, transparent );
    padding-right: 0.4em;
}
.sc19-read-more--solution-2 .sc19-read-more__state:checked ~ .sc19-read-more__target::before {
    display: none;
}
/* COMPONENTS: SC19 "Read More": Show/Hide Solution #3:
    - Pro: [Performance] CSS-only (no JavaScript)
    - Con: [Degradation] Fallback is non-functional links
*/
/* RFE: Use `autoprefixer`; if not, this _could_ break after several years */
.sc19-read-more--solution-3 .sc19-read-more__target {
	overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}
.sc19-read-more--solution-3 .sc19-read-more__state:checked ~ .sc19-read-more__target {
    -webkit-line-clamp: inherit;
}

/* PAGE-SPECIFIC */
/* NOTE: The __not__ page-specific styles __above__ should be global;
         and these page-specific styles __below__ should not need IDs;
         but, am not allowed to edit global styles, yet;
         so, we need to artifically scope these styles */
#sc19 {
    background-color: #0e0520;
    padding: 0px 25px 30px 25px;
}
#sc19 dl {
    margin-left: 0; /* override `…/main.css` */
}
#sc19 dd,
#sc19 dt {
    line-height: 1.5; /* override `tacc-new-theme/css/main.css`; match `body` */
}
#sc19 dd {
    margin-left: 0; /* override `html/css/main.css` *//* match `tacc-new-theme/css/main.css` */
}

/* MARKUP NOTES */
/* FAQ: `#sc19` and `.container` __must not__ be together,
        because `#sc19` sets wide background color
        (without reliance on variable containers)
        and `.container` restricts content width. */
</style>