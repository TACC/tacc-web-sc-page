scripts:
  # Delete then create output directory
  setup: rm -rf ./dist && shx mkdir -p ./dist

  # Build temporary partial templates, then build final markup
  build: nps build:2019 build:2020
  build:2019: nps build:2019:partials build:2019:markup
  build:2020: echo 'No 2020 templates nor assets, yet.'

  # Build each temporary partial
    # WARNING: Do not put temporary partials in `./dist`, because
    #          partials can not load from a `./dist` directory
    # SEE:     https://github.com/janl/mustache.js/issues/726
    # FAQ:     Prefix temporary partials with underscore, to identify them
    #          as temporary (also, add underscore pattern to `.gitignore`)
  build:2019:partials: nps
    build:2019:partials:events:booth
    build:2019:partials:events:conf
    # Via Mustache (`mustache`) apply data (`….json`)
    # into template (`….mustache`) to make partial (`….mustache`)
  build:2019:partials:events:booth: >-
    mustache
    ./2019/assets/events.booth.json ./2019/templates/events.mustache
    ./2019/templates/partials/_events.booth.mustache
  build:2019:partials:events:conf: >-
    mustache
    ./2019/assets/events.conf.json ./2019/templates/events.mustache
    ./2019/templates/partials/_events.conf.mustache

  # Build final markup
    # Import partial template(s) (`-p ….mustache`)
    # Apply data into template, then ouput to… (`….json ….mustache >`)
    # Final markup file (`….html`)
  build:2019:markup: >-
    mustache
    -p ./2019/templates/partials/styles.mustache
    -p ./2019/templates/partials/_events.booth.mustache
    -p ./2019/templates/partials/_events.conf.mustache
    -p ./2019/templates/partials/social-media.mustache
    ./2019/assets/events.booth.json ./2019/templates/index.mustache >
    ./dist/2019.html

  report: echo "Copy relevant markup from './dist/output.html'"

  # Delete temporary files
  clean: rm -f ./**/_*.*
